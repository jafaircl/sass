@charset "UTF-8"; 
/**
 * Parent selector mixin
 * ---
 * Grab the immediate parent selector
 * ---
 * @param @content
 * ---
 * @example scss - Usage
 * body {
 *   div {
 *     span{
 *       position: absolute;
 *       top: 50%; left: 50%;
 *       transform: translate(-50%,-50%);
 *       @include parent {
 *         position: relative;
 *       }
 *     }
 *   }
 * }
 * ---
 * @example css - Output
 * body div {
 *     position: relative;
 *   }
 *   body div span {
 *     position: absolute;
 *     top: 50%; left: 50%;
 *     transform: translate(-50%,-50%);
 *   }
 */

@mixin parent {

  @each $selector in & {

    $l: length($selector);

    @if ($l == 1) {
      @error "Used parent mixin on a top-level selector";
    } @else {

      $parent: nth($selector,1);
      @for $i from 2 to $l {
        $parent: append($parent,nth($selector,$i));
      }

      @at-root #{$parent} {
        @content;
      }
    }
  }
}

/**
 * Centering mixin
 * ---
 * Center an element
 * ---
 * @param {string} $axis - centering axis
 * @param {string} $position - relative/absolute positioning for parent
 * ---
 * @example scss - Usage
 * body {
 *   div {
 *     span{
 *       @include center(xy);
 *     }
 *   }
 * }
 * ---
 * @example css - Output
 * body div {
 *     position: relative;
 *   }
 *   body div span {
 *     position: absolute;
 *     top: 50%; left: 50%;
 *     transform: translate(-50%,-50%);
 *   }
 */
@mixin center($axis: null, $position: relative){
  
  @if $axis == 'x' {
   // x-axis only
    
    @include parent {
      position: $position;
    }
    position: absolute;
    left: 50%;
    transform: translate(-50%,0);
   
  }  @else if $axis == 'y' {
   
    @include parent {
      position: $position;
    } 
    position: absolute;
    top: 50%;
    transform: translate(0,-50%);
   
  } @else if $axis == 'xy' {
   
    @include parent {
      position: $position;
    }
    position: absolute;
    top: 50%; left: 50%;
    transform: translate(-50%,-50%);
   
  } @else {
    margin: 0 auto;
  }
}